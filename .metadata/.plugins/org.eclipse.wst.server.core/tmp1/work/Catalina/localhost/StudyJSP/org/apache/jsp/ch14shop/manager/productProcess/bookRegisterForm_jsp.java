/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.84
 * Generated at: 2022-12-27 09:34:21 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.ch14shop.manager.productProcess;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.Timestamp;

public final class bookRegisterForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/ch14shop/manager/productProcess/../../etc/color.jspf", Long.valueOf(1672048062000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.sql.Timestamp");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');
 
  String bodyback_c="#e0ffff";
  String back_c="#8fbc8f";
  String title_c="#5f9ea0";
  String value_c="#b0e0e6";
  String bar="#778899";

      out.write('\n');

String managerId = "";
try {
	managerId = (String) session.getAttribute("managerId");
	if (managerId == null || managerId.equals("")) {
		response.sendRedirect("../logon/managerLoginForm.jsp");
	} else {

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>상품등록</title>\n");
      out.write("<link href=\"../../etc/login.css\" rel=\"stylesheet\" type=\"text/css\">\n");
      out.write("<script type=\"text/javascript\" src=\"../../etc/script.js\"></script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("	<div class=\"title-login\">\n");
      out.write("		<h2>상품 등록</h2>\n");
      out.write("	</div>\n");
      out.write("	<div class=\"login-wrap-Register\">\n");
      out.write("		<div class=\"login-html\">\n");
      out.write("			<input id=\"tab-1\" type=\"radio\" name=\"tab\" class=\"sign-in\" checked>\n");
      out.write("			<label for=\"tab-1\" class=\"tab\">책 등록</label>\n");
      out.write("			 <input id=\"tab-2\"\n");
      out.write("				type=\"radio\" name=\"tab\" class=\"sign-up\">\n");
      out.write("			<label for=\"tab-2\" class=\"tab\">책 목록</label>	\n");
      out.write("			<div class=\"login-form\">\n");
      out.write("				<div class=\"sign-in-htm\">\n");
      out.write("					<form method=\"post\" action=\"bookRegisterPro.jsp\" enctype=\"multipart/form-data\">\n");
      out.write("						<div class=\"group\">\n");
      out.write("							<label for=\"분류 선택\" class=\"label\"> \n");
      out.write("								분류 선택\n");
      out.write("							</label>\n");
      out.write("								<select name=\"book_kind\">\n");
      out.write("									<option value=\"100\">문학</option>\n");
      out.write("									<option value=\"200\">외국어</option>\n");
      out.write("									<option value=\"300\">컴퓨터</option>\n");
      out.write("								</select>\n");
      out.write("						</div>\n");
      out.write("						<div class=\"group\">\n");
      out.write("							<label for=\"책 제목\" class=\"label\"> \n");
      out.write("								책 제목\n");
      out.write("							</label>\n");
      out.write("							<input id=\"user\"\n");
      out.write("								type=\"text\" class=\"input\" name=\"book_title\" maxlength=\"50\"\n");
      out.write("								size=\"50\">\n");
      out.write("						</div>\n");
      out.write("						<div class=\"group\">\n");
      out.write("							<label for=\"책 가격\" class=\"label\"> \n");
      out.write("								가격\n");
      out.write("							</label>\n");
      out.write("							<input id=\"user\"\n");
      out.write("								type=\"text\" class=\"input\" name=\"book_price\" maxlength=\"50\"\n");
      out.write("								size=\"50\">\n");
      out.write("						</div>\n");
      out.write("						<div class=\"group\">\n");
      out.write("							<label for=\"책 수량\" class=\"label\"> \n");
      out.write("								수량\n");
      out.write("							</label>\n");
      out.write("							<input id=\"user\"\n");
      out.write("								type=\"text\" class=\"input\" name=\"book_count\" maxlength=\"5\"\n");
      out.write("								size=\"10\">\n");
      out.write("						</div>\n");
      out.write("						<div class=\"group\">\n");
      out.write("							<label for=\"책 저자\" class=\"label\"> \n");
      out.write("								저자\n");
      out.write("							</label>\n");
      out.write("							<input id=\"user\"\n");
      out.write("								type=\"text\" class=\"input\" name=\"author\" maxlength=\"30\"\n");
      out.write("								size=\"20\">\n");
      out.write("						</div>\n");
      out.write("						<div class=\"group\">\n");
      out.write("							<label for=\"책 출판사\" class=\"label\"> \n");
      out.write("								출판사\n");
      out.write("							</label>\n");
      out.write("							<input id=\"user\"\n");
      out.write("								type=\"text\" class=\"input\" name=\"publishing_com\" maxlength=\"30\"\n");
      out.write("								size=\"20\">\n");
      out.write("						</div>\n");
      out.write("						<div class=\"group\">\n");
      out.write("							<label for=\"책 출판일\" class=\"label\"> \n");
      out.write("								출판일\n");
      out.write("							</label>\n");
      out.write("							<select name=\"publishing_year\">\n");
      out.write("							");

								Timestamp nowTime = new Timestamp(System.currentTimeMillis());
								int lastYear = Integer.parseInt(nowTime.toString().substring(0,4));
								for(int i = lastYear; i >=2010; i--){
							
      out.write("\n");
      out.write("								<option value=\"");
      out.print(i);
      out.write('"');
      out.write('>');
      out.print(i);
      out.write("</option>\n");
      out.write("								");
}
      out.write("\n");
      out.write("							</select>년\n");
      out.write("							<select name=\"publishing_month\">\n");
      out.write("							");

								for(int i = 1; i<=12; i++){
							
      out.write("\n");
      out.write("								<option value=\"");
      out.print(i);
      out.write('"');
      out.write('>');
      out.print(i);
      out.write("</option>\n");
      out.write("							");

								}
							
      out.write("\n");
      out.write("							</select>월\n");
      out.write("							<select name=\"publishing_day\">\n");
      out.write("							");

								for(int i = 1; i<=31; i++){
							
      out.write("\n");
      out.write("								<option value=\"");
      out.print(i);
      out.write('"');
      out.write('>');
      out.print(i);
      out.write("</option>\n");
      out.write("								");

								}
							
      out.write("\n");
      out.write("							</select>일\n");
      out.write("						</div>\n");
      out.write("						<div class=\"group\">\n");
      out.write("							<label for=\"책 이미지\" class=\"label\"> \n");
      out.write("								이미지\n");
      out.write("							</label>\n");
      out.write("							<input type=\"file\" name=\"book_image\">\n");
      out.write("						</div>\n");
      out.write("						<div class=\"group\">\n");
      out.write("							<label for=\"책 내용\" class=\"label\"> \n");
      out.write("								내용\n");
      out.write("							</label>\n");
      out.write("							<textarea name=\"book_content\" rows=\"13\" cols=\"46\">\n");
      out.write("							</textarea>\n");
      out.write("						</div>\n");
      out.write("						<div class=\"group\">\n");
      out.write("							<label for=\"책 할인율\" class=\"label\"> \n");
      out.write("								할인율\n");
      out.write("							</label>\n");
      out.write("							<input class=\"input\"type=\"text\" size=\"5\" maxlength=\"2\" name=\"discount_rate\">\n");
      out.write("						</div>\n");
      out.write("						<div class=\"group\">\n");
      out.write("							<input class=\"button\" type=\"button\" value=\"책 등록\" onclick=\"checkForm(this.form)\">\n");
      out.write("						</div>\n");
      out.write("						<div class=\"group\">\n");
      out.write("							<input class=\"button\" type=\"reset\" value=\"다시작성\">\n");
      out.write("						</div>\n");
      out.write("						<div class=\"group\">\n");
      out.write("							<label for=\"관리자 메인\" class=\"label\"> <a\n");
      out.write("								href=\"../managerMain.jsp\">관리자 메인으로</a>\n");
      out.write("							</label>\n");
      out.write("						</div>\n");
      out.write("					</form>\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("		</div>\n");
      out.write("	</div>\n");
      out.write("</body>\n");
      out.write("</html>\n");

}
} catch (Exception e) {
e.printStackTrace();
}

      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
