/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.84
 * Generated at: 2022-12-27 13:19:19 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.ch14shop.manager.productProcess;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import ch14.bookshop.master.ShopBookDBBean;
import ch14.bookshop.master.ShopBookDataBean;
import java.util.List;
import java.text.SimpleDateFormat;

public final class bookList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {


			SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm");

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/ch14shop/manager/productProcess/../../etc/color.jspf", Long.valueOf(1672048062000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("ch14.bookshop.master.ShopBookDBBean");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("ch14.bookshop.master.ShopBookDataBean");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
 
  String bodyback_c="#e0ffff";
  String back_c="#8fbc8f";
  String title_c="#5f9ea0";
  String value_c="#b0e0e6";
  String bar="#778899";

      out.write('\n');

	String managerId = "";
	try{
		managerId = (String)session.getAttribute("managerId");
		if(managerId==null || managerId.equals("")){
			response.sendRedirect("../logon/managerLoginForm.jsp");
		}else{

      out.write('\n');
      out.write('\n');
      out.write('\n');

	List <ShopBookDataBean> bookList = null;
	int number = 0;
	String book_kind = "";
	book_kind = request.getParameter("book_kind");
	
	ShopBookDBBean bookProcess = ShopBookDBBean.getInstance();
	int count = bookProcess.getBookCount();
	
	if(count > 0){
		bookList = bookProcess.getBooks(book_kind);
	}

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>등록된 책 목록</title>\n");
      out.write("<link href=\"../../etc/login.css\" rel=\"stylesheet\" type=\"text/css\">\n");
      out.write("</head>\n");
      out.write("<body>\n");

	String book_kindName = "";
	if(book_kind.equals("100")){
		book_kindName = "문학";
	}else if(book_kind.equals("200")){
		book_kindName = "외국어";
	}else if(book_kind.equals("300")){
		book_kindName = "컴퓨터";
	}else if(book_kind.equals("all")){
		book_kindName = "전체";
	}

      out.write("\n");
      out.write("\n");
      out.write("	<div class=\"title-login\">\n");
      out.write("		<h2>책 목록</h2>\n");
      out.write("	</div>\n");
      out.write("	<div class=\"login-wrap-Notice\">\n");
      out.write("		<div class=\"login-html\">\n");
      out.write("			<div class=\"Notice-group\">\n");
      out.write("				<a href=\"../managerMain.jsp\">관리자 메인으로</a> &nbsp;\n");
      out.write("				<p>");
      out.print(book_kindName);
      out.write(" 분류의 목록 : \n");
      out.write("					");
if(book_kind.equals("all")){
      out.write("\n");
      out.write("						");
      out.print(count);
      out.write("개\n");
      out.write("					");
}else{
      out.write("\n");
      out.write("						");
      out.print(bookList.size());
      out.write("개 \n");
      out.write("					");
}
      out.write("\n");
      out.write("				</p>\n");
      out.write("			</div>\n");
      out.write("			<table>	\n");
      out.write("				<tr>\n");
      out.write("					<td align=\"right\" bgcolor=\"");
      out.print(value_c );
      out.write("\">\n");
      out.write("						<a href=\"bookRegisterForm.jsp\">책 등록</a>\n");
      out.write("					</td>\n");
      out.write("				</tr>\n");
      out.write("			</table>\n");

	if(count==0){

      out.write("\n");
      out.write("			<table>	\n");
      out.write("				<tr>\n");
      out.write("					<td align=\"center\">\n");
      out.write("						등록된 책이 없습니다.\n");
      out.write("					</td>\n");
      out.write("				</tr>\n");
      out.write("			</table>\n");
 }else{
      out.write("\n");
      out.write("			<table border=\"1\">\n");
      out.write("				<tr height=\"30\" bgcolor=\"");
      out.print(value_c);
      out.write("\">\n");
      out.write("					<td align=\"center\" width=\"50\">번호</td>\n");
      out.write("					<td align=\"center\" width=\"50\">책분류</td>\n");
      out.write("					<td align=\"center\" width=\"200\">제목</td>\n");
      out.write("					<td align=\"center\" width=\"100\">가격</td>\n");
      out.write("					<td align=\"center\" width=\"100\">수량</td>\n");
      out.write("					<td align=\"center\" width=\"100\">저자</td>\n");
      out.write("					<td align=\"center\" width=\"100\">출판사</td>\n");
      out.write("					<td align=\"center\" width=\"100\">출판일</td>\n");
      out.write("					<td align=\"center\" width=\"100\">책이미지</td>\n");
      out.write("					<td align=\"center\" width=\"50\">할인율</td>\n");
      out.write("					<td align=\"center\" width=\"100\">등록일</td>\n");
      out.write("					<td align=\"center\" width=\"50\">수정</td>\n");
      out.write("					<td align=\"center\" width=\"50\">삭제</td>\n");
      out.write("				</tr>\n");

	for(int i = 0; i < bookList.size(); i++){
		ShopBookDataBean book = (ShopBookDataBean)bookList.get(i);	

      out.write("\n");
      out.write("				<tr height=\"30\">\n");
      out.write("					<td align=\"center\" width=\"50\">");
      out.print(++number);
      out.write(" </td>\n");
      out.write("					<td align=\"center\" width=\"50\">");
      out.print(book.getBook_kind());
      out.write("</td>\n");
      out.write("					<td align=\"center\" width=\"200\">");
      out.print(book.getBook_title());
      out.write("</td>\n");
      out.write("					<td align=\"center\" width=\"100\">");
      out.print(book.getBook_price());
      out.write("</td>\n");
      out.write("					<td align=\"center\" width=\"100\">\n");
      out.write("						");
if(book.getBook_count()==0){
      out.write("\n");
      out.write("							<font color=\"red\">");
      out.print("일시품절" );
      out.write("</font>\n");
      out.write("						");
}else{
      out.write("\n");
      out.write("							");
      out.print(book.getBook_count());
      out.write("\n");
      out.write("						");
} 
      out.write("\n");
      out.write("					</td>\n");
      out.write("					<td align=\"center\" width=\"100\">");
      out.print(book.getAuthor());
      out.write("</td>\n");
      out.write("					<td align=\"center\" width=\"100\">");
      out.print(book.getPublishing_com());
      out.write("</td>\n");
      out.write("					<td align=\"center\" width=\"100\">");
      out.print(book.getPublishing_date());
      out.write("</td>\n");
      out.write("					<td align=\"center\" width=\"100\">");
      out.print(book.getBook_image());
      out.write("</td>\n");
      out.write("					<td align=\"center\" width=\"50\">");
      out.print(book.getDiscount_rate());
      out.write("</td>\n");
      out.write("					<td align=\"center\" width=\"100\">");
      out.print(sdf.format(book.getReg_date()));
      out.write("</td>\n");
      out.write("					<td align=\"center\" width=\"50\">\n");
      out.write("						<a href=\"bookUpdateForm.jsp?book_id=");
      out.print(book.getBook_id());
      out.write("\n");
      out.write("						&book_kind=");
      out.print(book.getBook_kind());
      out.write("\">\n");
      out.write("						수정</a>\n");
      out.write("					</td>\n");
      out.write("					<td align=\"center\" width=\"50\">\n");
      out.write("						<a href=\"bookDeleteForm.jsp?book_id=");
      out.print(book.getBook_id());
      out.write("\n");
      out.write("						&book_kind=");
      out.print(book.getBook_kind());
      out.write("\">\n");
      out.write("						삭제</a>\n");
      out.write("					</td>\n");
      out.write("				</tr>\n");
      out.write("				");
}
      out.write("\n");
      out.write("			</table>\n");
      out.write("			");
}
      out.write("\n");
      out.write("		</div>		\n");
      out.write("	</div>\n");
      out.write("</body>\n");
      out.write("</html>\n");
      out.write("\n");

		}
	}catch(Exception e){
		e.printStackTrace();
	}

    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
